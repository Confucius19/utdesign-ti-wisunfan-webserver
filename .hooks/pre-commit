#!/bin/bash

echo "Checking Client..."
cd client 
npm run pretty-quick --staged
STAGED_FILES=( $(git diff --cached --name-only --diff-filter=ACM | grep "client.*[tj]sx\{0,1\}$" | cut -c 8-) )
if ((${#STAGED_FILES[@]})); then
  # staged array is non empty
  $ESLINT "${STAGED_FILES[@]}" --fix
  git add "${STAGED_FILES[@]}"
  ESLINT_EXIT="$?"
  if [[ "${ESLINT_EXIT}" == 0 ]]; then
    printf "\n\033[42mCOMMIT SUCCEEDED\033[0m\n"
  else
    printf "\n\033[41mCOMMIT FAILED:\033[0m Fix eslint errors and try again\n"
    exit 1
  fi
fi

cd ..
echo "Checking Server..."
cd server 
npm run pretty-quick --staged
if ((${#STAGED_FILES[@]})); then
  # staged array is non empty
  STAGED_FILES=( $(git diff --cached --name-only --diff-filter=ACM | grep "server.*js$" | cut -c 9-) )
  $ESLINT "${STAGED_FILES[@]}" --fix
  git add "${STAGED_FILES[@]}"
  ESLINT_EXIT="$?"
  if [[ "${ESLINT_EXIT}" == 0 ]]; then
    printf "\n\033[42mCOMMIT SUCCEEDED\033[0m\n"
  else
    printf "\n\033[41mCOMMIT FAILED:\033[0m Fix eslint errors and try again\n"
    exit 1
  fi
fi
cd ..




# echo "ESLint'ing ${#STAGED_FILES[@]} files"

# if [[ "$STAGED_FILES" = "" ]]; then
#   exit 0
# fi

# $ESLINT "${STAGED_FILES[@]}" --fix

# ESLINT_EXIT="$?"

# # Re-add files since they may have been fixed
# git add "${STAGED_FILES[@]}"

# if [[ "${ESLINT_EXIT}" == 0 ]]; then
#   printf "\n\033[42mCOMMIT SUCCEEDED\033[0m\n"
# else
#   printf "\n\033[41mCOMMIT FAILED:\033[0m Fix eslint errors and try again\n"
#   exit 1
# fi

# exit $?